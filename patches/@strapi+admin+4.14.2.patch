diff --git a/node_modules/@strapi/admin/admin/src/pages/ProfilePage/components/UserInfo/index.js b/node_modules/@strapi/admin/admin/src/pages/ProfilePage/components/UserInfo/index.js
index 739d589..1826957 100644
--- a/node_modules/@strapi/admin/admin/src/pages/ProfilePage/components/UserInfo/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/ProfilePage/components/UserInfo/index.js
@@ -1,113 +1,142 @@
 import React from 'react';
 
-import { Box, Flex, Grid, GridItem, Typography } from '@strapi/design-system';
+import { Box, Flex, Grid, GridItem, Typography, ToggleInput } from '@strapi/design-system';
 import { GenericInput } from '@strapi/helper-plugin';
 import PropTypes from 'prop-types';
 import { useIntl } from 'react-intl';
 
 const UserInfo = ({ errors, onChange, values }) => {
-  const { formatMessage } = useIntl();
+    const { formatMessage } = useIntl();
 
-  return (
-    <Box
-      background="neutral0"
-      hasRadius
-      shadow="filterShadow"
-      paddingTop={6}
-      paddingBottom={6}
-      paddingLeft={7}
-      paddingRight={7}
-    >
-      <Flex direction="column" alignItems="stretch" gap={4}>
-        <Typography variant="delta" as="h2">
-          {formatMessage({
-            id: 'global.profile',
-            defaultMessage: 'Profile',
-          })}
-        </Typography>
-        <Grid gap={5}>
-          <GridItem s={12} col={6}>
-            <GenericInput
-              intlLabel={{
-                id: 'Auth.form.firstname.label',
-                defaultMessage: 'First name',
-              }}
-              error={errors.firstname}
-              onChange={onChange}
-              value={values.firstname}
-              type="text"
-              name="firstname"
-              required
-            />
-          </GridItem>
-          <GridItem s={12} col={6}>
-            <GenericInput
-              intlLabel={{
-                id: 'Auth.form.lastname.label',
-                defaultMessage: 'Last name',
-              }}
-              error={errors.lastname}
-              onChange={onChange}
-              value={values.lastname}
-              type="text"
-              name="lastname"
-            />
-          </GridItem>
-          <GridItem s={12} col={6}>
-            <GenericInput
-              intlLabel={{ id: 'Auth.form.email.label', defaultMessage: 'Email' }}
-              error={errors.email}
-              onChange={onChange}
-              value={values.email}
-              type="email"
-              name="email"
-              required
-            />
-          </GridItem>
-          <GridItem s={12} col={6}>
-            <GenericInput
-              intlLabel={{
-                id: 'Auth.form.username.label',
-                defaultMessage: 'Username',
-              }}
-              error={errors.username}
-              onChange={onChange}
-              value={values.username}
-              type="text"
-              name="username"
-            />
-          </GridItem>
-        </Grid>
-      </Flex>
-    </Box>
-  );
+    return (
+        <Box
+            background="neutral0"
+            hasRadius
+            shadow="filterShadow"
+            paddingTop={6}
+            paddingBottom={6}
+            paddingLeft={7}
+            paddingRight={7}
+        >
+            <Flex direction="column" alignItems="stretch" gap={4}>
+                <Typography variant="delta" as="h2">
+                    {formatMessage({
+                        id: 'global.profile',
+                        defaultMessage: 'Profile',
+                    })}
+                </Typography>
+                <Grid gap={5}>
+                    <GridItem s={12} col={6}>
+                        <GenericInput
+                            intlLabel={{
+                                id: 'Auth.form.firstname.label',
+                                defaultMessage: 'First name',
+                            }}
+                            error={errors.firstname}
+                            onChange={onChange}
+                            value={values.firstname}
+                            type="text"
+                            name="firstname"
+                            required
+                        />
+                    </GridItem>
+                    <GridItem s={12} col={6}>
+                        <GenericInput
+                            intlLabel={{
+                                id: 'Auth.form.lastname.label',
+                                defaultMessage: 'Last name',
+                            }}
+                            error={errors.lastname}
+                            onChange={onChange}
+                            value={values.lastname}
+                            type="text"
+                            name="lastname"
+                        />
+                    </GridItem>
+                    <GridItem s={12} col={6}>
+                        <GenericInput
+                            intlLabel={{ id: 'Auth.form.email.label', defaultMessage: 'Email' }}
+                            error={errors.email}
+                            onChange={onChange}
+                            value={values.email}
+                            type="email"
+                            name="email"
+                            required
+                        />
+                    </GridItem>
+                    <GridItem s={12} col={6}>
+                        <GenericInput
+                            intlLabel={{
+                                id: 'Auth.form.username.label',
+                                defaultMessage: 'Username',
+                            }}
+                            error={errors.username}
+                            onChange={onChange}
+                            value={values.username}
+                            type="text"
+                            name="username"
+                        />
+                    </GridItem>
+                </Grid>
+                <Box
+                    padding={4}
+                    background="primary100"
+                    shadow="filterShadow"
+                >
+                    <Typography>
+                        {formatMessage({
+                            id: 'Auth.form.showCredits.disclaimer',
+                            defaultMessage: "This following toggle will make your full name visible under all the resources you've created:",
+                        })}
+                    </Typography>
+                </Box>
+                <ToggleInput
+                    label={formatMessage({
+                        id: 'Auth.form.showCredits.label',
+                        defaultMessage: 'Credits Visible',
+                    })}
+                    error={errors.showCredits}
+                    onChange={onChange}
+                    checked={values.showCredits === null ? false : values.showCredits}
+                    value={values.showCredits}
+                    name="showCredits"
+                    onLabel="True"
+                    offLabel="False"
+                >
+                </ToggleInput>
+            </Flex>
+        </Box>
+    );
 };
 
 UserInfo.propTypes = {
-  errors: PropTypes.shape({
-    firstname: PropTypes.string,
-    lastname: PropTypes.string,
-    username: PropTypes.string,
-    email: PropTypes.string,
-  }),
-  onChange: PropTypes.func,
-  values: PropTypes.shape({
-    firstname: PropTypes.string,
-    lastname: PropTypes.string,
-    username: PropTypes.string,
-    email: PropTypes.string,
-  }),
+    errors: PropTypes.shape({
+        firstname: PropTypes.string,
+        lastname: PropTypes.string,
+        username: PropTypes.string,
+        email: PropTypes.string,
+        showCredits: PropTypes.bool,
+    }),
+    onChange: PropTypes.func,
+    values: PropTypes.shape({
+        firstname: PropTypes.string,
+        lastname: PropTypes.string,
+        username: PropTypes.string,
+        email: PropTypes.string,
+        showCredits: PropTypes.bool,
+    }),
 };
 
 UserInfo.defaultProps = {
-  errors: {},
-  onChange() {},
-  values: {
-    firstname: '',
-    lastname: '',
-    username: '',
-    email: '',
-  },
+    errors: {},
+    onChange() { },
+    values: {
+        firstname: '',
+        lastname: '',
+        username: '',
+        email: '',
+        showCredits: false,
+    },
 };
 
 export default UserInfo;
\ No newline at end of file
diff --git a/node_modules/@strapi/admin/admin/src/pages/ProfilePage/index.js b/node_modules/@strapi/admin/admin/src/pages/ProfilePage/index.js
index c4bcaa7..aa1bcd3 100644
--- a/node_modules/@strapi/admin/admin/src/pages/ProfilePage/index.js
+++ b/node_modules/@strapi/admin/admin/src/pages/ProfilePage/index.js
@@ -174,8 +174,8 @@ const ProfilePage = () => {
   }
 
   const hasLockedRole = dataSSO?.isSSOLocked ?? false;
-  const { email, firstname, lastname, username, preferedLanguage } = data;
-  const initialData = { email, firstname, lastname, username, preferedLanguage, currentTheme };
+  const { email, firstname, lastname, username, preferedLanguage, showCredits } = data;
+  const initialData = { email, firstname, lastname, username, preferedLanguage, currentTheme, showCredits };
 
   return (
     <Main aria-busy={isSubmittingForm}>
diff --git a/node_modules/@strapi/admin/server/content-types/User.js b/node_modules/@strapi/admin/server/content-types/User.js
index cc7b3c6..6d65eb5 100644
--- a/node_modules/@strapi/admin/server/content-types/User.js
+++ b/node_modules/@strapi/admin/server/content-types/User.js
@@ -98,6 +98,12 @@ module.exports = {
       required: false,
       searchable: false,
     },
+    showCredits: {
+      type: 'boolean',
+      default: false,
+      configurable: false,
+      searchable: false,
+    },
   },
   config: {
     attributes: {
diff --git a/node_modules/@strapi/admin/server/validation/user.js b/node_modules/@strapi/admin/server/validation/user.js
index eeee3f7..c4e724a 100644
--- a/node_modules/@strapi/admin/server/validation/user.js
+++ b/node_modules/@strapi/admin/server/validation/user.js
@@ -28,6 +28,7 @@ const profileUpdateSchema = yup
       .when('password', (password, schema) => (!isUndefined(password) ? schema.required() : schema))
       .notNull(),
     preferedLanguage: yup.string().nullable(),
+    showCredits: yup.boolean().nullable(),
   })
   .noUnknown();
 
